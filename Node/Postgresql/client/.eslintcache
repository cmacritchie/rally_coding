[{"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\index.js":"1","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\App.js":"2","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\reducers\\index.js":"3","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\reducers\\userReducer.js":"4","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\actions\\userActions.js":"5","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\reducers\\blogReducer.js":"6","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\actions\\blogActions.js":"7","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\NewArticle.js":"8","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\Login.js":"9","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\components\\NavBar.js":"10","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\Home.js":"11","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\components\\Credentials.js":"12","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\Signup.js":"13","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\HOC\\protectedRoute.js":"14"},{"size":672,"mtime":1611471410871,"results":"15","hashOfConfig":"16"},{"size":1137,"mtime":1611756659150,"results":"17","hashOfConfig":"16"},{"size":206,"mtime":1611209193710,"results":"18","hashOfConfig":"16"},{"size":856,"mtime":1611544757585,"results":"19","hashOfConfig":"16"},{"size":1653,"mtime":1611758256903,"results":"20","hashOfConfig":"16"},{"size":937,"mtime":1611544757583,"results":"21","hashOfConfig":"16"},{"size":1731,"mtime":1611758256902,"results":"22","hashOfConfig":"16"},{"size":2614,"mtime":1611756659162,"results":"23","hashOfConfig":"16"},{"size":958,"mtime":1611756659160,"results":"24","hashOfConfig":"16"},{"size":1103,"mtime":1611756659157,"results":"25","hashOfConfig":"16"},{"size":2847,"mtime":1611761043390,"results":"26","hashOfConfig":"16"},{"size":2329,"mtime":1611758256903,"results":"27","hashOfConfig":"16"},{"size":1001,"mtime":1611756659163,"results":"28","hashOfConfig":"16"},{"size":603,"mtime":1611544757572,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"g0kvsn",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\index.js",[],["67","68"],"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\App.js",["69","70","71"],"import React, { useEffect } from 'react'\r\n\r\nimport { HashRouter, Router,  Route } from 'react-router-dom';\r\nimport Cookie from 'js-cookie'\r\nimport { useDispatch } from \"react-redux\";\r\nimport NavBar from './components/NavBar'\r\n\r\nimport Home from './pages/Home'\r\nimport Login from './pages/Login'\r\nimport Signup from './pages/Signup'\r\nimport NewArticle from './pages/NewArticle'\r\nimport protectedRoute from './HOC/protectedRoute'\r\n\r\nimport { getMe } from './actions/userActions'\r\nimport { createBrowserHistory } from 'history';\r\nexport const history = createBrowserHistory()\r\n// export let history = createBrowserHistory();\r\n\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getMe())\r\n  })\r\n\r\n  return (\r\n    <HashRouter >\r\n      <NavBar />\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/login\" component={Login} />\r\n      <Route path=\"/sign-up\" component={Signup} />\r\n      <Route exact path=\"/post-article\" component={NewArticle} />\r\n      <Route exact path=\"/post-article/:articleid\" component={NewArticle} />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\reducers\\index.js",[],"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\reducers\\userReducer.js",["72"],"import { UserActionTypes } from '../actions/userActions'\r\n\r\n\r\nconst initialState = {\r\n    loginError: false,\r\n    isAuthenticated: false,\r\n    userInfo:null,\r\n    failAcknowledge:true\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload} = action;\r\n    switch(type) {\r\n        case UserActionTypes.LOGIN_SUCCESS:\r\n        case UserActionTypes.REGISETER_USER:\r\n            return { ...state, loginError: false, isAuthenticated: true, userInfo: { ...payload }}\r\n        case UserActionTypes.LOGIN_FAIL:\r\n            return { ...state, loginError: true, failAcknowledge:false }\r\n        case UserActionTypes.LOGOUT:\r\n            return { ...state, ...initialState }\r\n        case UserActionTypes.FAIL_ACKNOWLEDGE:\r\n            return { ...state, failAcknowledge: true }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\actions\\userActions.js",["73"],"import axios from 'axios'\r\n\r\n\r\nexport const UserActionTypes = { \r\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n    LOGIN_FAIL: 'LOGIN_FAIL',\r\n    REGISETER_USER: 'REGISTER_USER',\r\n    LOGOUT: 'LOGOUT',\r\n    FAIL_ACKNOWLEDGE: 'FAIL_ACKNOWLEDGE'\r\n}\r\n\r\nexport const getMe = () => async dispatch => {\r\n\r\n    try{\r\n        const res = await axios.get('/api/me')\r\n        dispatch({\r\n            type: UserActionTypes.LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n    \r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const registerUser = (newUser, history) => async dispatch => {\r\n    try{\r\n        const res = await axios.post('/api/user', newUser);\r\n        dispatch({\r\n            type: UserActionTypes.REGISETER_USER,\r\n            payload: res.data\r\n        })\r\n        history.push('/')\r\n    } catch (e) {\r\n        dispatch({ type: UserActionTypes.LOGIN_FAIL })\r\n    }\r\n}\r\n\r\nexport const loginUser = (credentials, history) => async dispatch => {\r\n    try{\r\n        const res = await axios.post('/api/login', credentials)\r\n        dispatch({\r\n            type: UserActionTypes.LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        history.push('/')\r\n    } catch (e) {\r\n        dispatch({ type: UserActionTypes.LOGIN_FAIL })\r\n    }\r\n}\r\n\r\nexport const logout = (history) => async dispatch => {\r\n    try {\r\n        const res = await axios.post('/api/logout')\r\n        dispatch({ type: UserActionTypes.LOGOUT })\r\n        history.push('/')\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const failAcknowledge = () => async dispatch => {\r\n    dispatch({\r\n        type: UserActionTypes.FAIL_ACKNOWLEDGE\r\n    })\r\n}","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\reducers\\blogReducer.js",["74"],"import { BlogActionTypes } from '../actions/blogActions'\r\n\r\n\r\nconst initialState = {\r\n    articles: [],\r\n    loaded:false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload} = action;\r\n    switch(type) {\r\n        case BlogActionTypes.FETCH_ARTICLES:\r\n            return { ...state, articles: payload, loaded:true }\r\n        case BlogActionTypes.POST_ARTICLE:\r\n            return {...state, articles: [payload, ...state.articles]}\r\n        case BlogActionTypes.DELETE_ARTICLE:\r\n            return { ...state, articles: state.articles.filter(article => article.id !== payload)}\r\n        case BlogActionTypes.EDIT_ARTICLE:\r\n            return{ ...state, articles: state.articles.map(article => {\r\n                if(article.id === payload.id) {\r\n                    return payload\r\n                }\r\n                return article\r\n            })}\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\actions\\blogActions.js",[],"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\NewArticle.js",["75"],"import React, { useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux'\r\nimport { postArticle, editArticle } from '../actions/blogActions'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst ArticleForm = ({existingArticle, onSubmit }) => {\r\n    const [article, setArticle] = useState(existingArticle)\r\n    useEffect(() => {\r\n        console.log(\"useffect?\")\r\n        setArticle(existingArticle)\r\n    },[existingArticle])\r\n\r\n    const submit = e => {\r\n        e.preventDefault()\r\n        onSubmit(article)\r\n    }\r\n\r\n    const filechange = e => {\r\n        setArticle({ ...article, upload: e.target.files[0]})\r\n    }\r\n\r\n    return(\r\n        <form id=\"article-form\" className=\"article-form\" onSubmit={submit}>\r\n            <label htmlFor=\"article-title\">Title</label><br />\r\n            <input id=\"article-title\" value={article.title} onChange={e=>setArticle({...article, title: e.target.value })}></input><br />\r\n            <label htmlFor=\"article-content\">Content</label><br/>\r\n            <textarea id=\"article-content\" \r\n                value={article.content} \r\n                onChange={e=>setArticle({...article, content:e.target.value})} \r\n                rows=\"10\" cols=\"60\"/><br />\r\n            <input type=\"file\" onChange={e =>filechange(e)} /><br />\r\n            <button type=\"submit\" form=\"article-form\" value=\"Submit\">Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nArticleForm.defaultProps = {\r\n    existingArticle: {\r\n        title:'',\r\n        content:'',\r\n        imageUrl:null\r\n    }\r\n}\r\n\r\nconst ArticleWrapper = ({ match, }) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const [fetchedArticle, setFetchedArticle] = useState({ title:'', content:''})\r\n    \r\n    useEffect(() => {\r\n        const { params } = match\r\n\r\n        async function fetchArticle(articleId) {\r\n            const res = await axios.get(`/api/blogpost/${articleId}`)\r\n            setFetchedArticle(res.data);\r\n        }\r\n        if(Object.keys(params).includes('articleid')) {\r\n            fetchArticle(params.articleid)\r\n        }\r\n    },[])\r\n\r\n    const submitHandler = (article) => {\r\n        if(article.hasOwnProperty('id')) {\r\n            console.log(\"patch article \")\r\n            //need to fix this.\r\n            dispatch(editArticle(article, history))\r\n        }\r\n        else {\r\n            console.log(\"creat Article\")\r\n            dispatch(postArticle({...article }, history))\r\n        }\r\n    }\r\n\r\n    return <ArticleForm key='1' existingArticle={fetchedArticle} onSubmit={submitHandler} />\r\n}\r\n\r\n\r\nexport default ArticleWrapper","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\Login.js",["76"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Credentials from '../components/Credentials'\r\nimport { loginUser, failAcknowledge } from '../actions/userActions'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const user = useSelector((state) => state.user)\r\n    \r\n\r\n    useEffect(() => {\r\n        return () => { \r\n            if(user.loginError) {\r\n                dispatch(failAcknowledge()) \r\n            } \r\n        }\r\n    },[])\r\n\r\n    const submit = (info) => {\r\n        dispatch(loginUser(info, history))\r\n    }\r\n\r\n    return(\r\n        <div className='login-wrapper'>\r\n        <h1>Login</h1>\r\n        <Credentials onSubmit={submit} />\r\n        {(user.loginError && !user.failAcknowledge) &&\r\n            <h3>Failed to Sign up </h3>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\components\\NavBar.js",["77"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { logout } from '../actions/userActions'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n    const history = useHistory();\r\n    const user = useSelector((state) => state.user)\r\n    const dispatch = useDispatch()\r\n\r\n    return(\r\n    <div className=\"nav-bar-wrapper\">\r\n        <ul className=\"nav-bar\">\r\n            <li><NavLink to='/'>Home</NavLink></li>\r\n            {!user.isAuthenticated &&\r\n            <>\r\n                <li><NavLink to='/login'>Login</NavLink></li>\r\n                <li><NavLink to='/sign-up'>Signup</NavLink></li>\r\n            </>\r\n            }\r\n            {user.isAuthenticated &&\r\n            <>\r\n                <li><NavLink to='/post-article'>New Article</NavLink></li>\r\n                <li><a onClick={()=> dispatch(logout(history))}>Logout</a></li>\r\n                <li><span>Welcome {user.userInfo.name}</span></li>\r\n            </>\r\n            }\r\n        </ul>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\Home.js",["78","79"],"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\components\\Credentials.js",[],"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\Signup.js",["80"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Credentials from '../components/Credentials'\r\nimport { registerUser, failAcknowledge } from '../actions/userActions'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Signup = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const user = useSelector((state) => state.user)\r\n    \r\n\r\n    useEffect(() => {\r\n        return () => { \r\n            if(user.loginError) {\r\n                dispatch(failAcknowledge()) \r\n            }\r\n        }\r\n    },[])\r\n\r\n    const submit = (info) => {\r\n        dispatch(registerUser(info, history))\r\n    }\r\n\r\n    return(\r\n        <div className='login-wrapper'>\r\n            <h1> Sign Up</h1>\r\n            <Credentials onSubmit={submit} email={true} />\r\n            {(user.loginError && !user.failAcknowledge) &&\r\n                <h1>Failed to Login User</h1>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\HOC\\protectedRoute.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":3,"column":22,"nodeType":"87","messageId":"88","endLine":3,"endColumn":28},{"ruleId":"85","severity":1,"message":"89","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":14},{"ruleId":"85","severity":1,"message":"90","line":12,"column":8,"nodeType":"87","messageId":"88","endLine":12,"endColumn":22},{"ruleId":"91","severity":1,"message":"92","line":11,"column":1,"nodeType":"93","endLine":26,"endColumn":2},{"ruleId":"85","severity":1,"message":"94","line":54,"column":15,"nodeType":"87","messageId":"88","endLine":54,"endColumn":18},{"ruleId":"91","severity":1,"message":"92","line":9,"column":1,"nodeType":"93","endLine":28,"endColumn":2},{"ruleId":"95","severity":1,"message":"96","line":62,"column":7,"nodeType":"97","endLine":62,"endColumn":9,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":19,"column":7,"nodeType":"97","endLine":19,"endColumn":9,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":25,"column":21,"nodeType":"103","endLine":25,"endColumn":65},{"ruleId":"95","severity":1,"message":"104","line":17,"column":7,"nodeType":"97","endLine":17,"endColumn":20,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":53,"column":33,"nodeType":"103","endLine":53,"endColumn":128},{"ruleId":"95","severity":1,"message":"99","line":19,"column":7,"nodeType":"97","endLine":19,"endColumn":9,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Cookie' is defined but never used.","'protectedRoute' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match'. Either include it or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has missing dependencies: 'dispatch' and 'user.loginError'. Either include them or remove the dependency array.",["112"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["113"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["114"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"117","fix":"121"},"Update the dependencies array to be: [match]",{"range":"122","text":"123"},"Update the dependencies array to be: [dispatch, user.loginError]",{"range":"124","text":"125"},"Update the dependencies array to be: [blog.loaded, dispatch]",{"range":"126","text":"127"},{"range":"128","text":"125"},[2114,2116],"[match]",[587,589],"[dispatch, user.loginError]",[505,518],"[blog.loaded, dispatch]",[590,592]]