[{"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\index.js":"1","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\App.js":"2","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\reducers\\index.js":"3","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\reducers\\userReducer.js":"4","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\actions\\userActions.js":"5","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\reducers\\blogReducer.js":"6","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\actions\\blogActions.js":"7","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\NewArticle.js":"8","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\Login.js":"9","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\components\\NavBar.js":"10","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\Home.js":"11"},{"size":672,"mtime":1611241824851,"results":"12","hashOfConfig":"13"},{"size":607,"mtime":1611245149672,"results":"14","hashOfConfig":"13"},{"size":206,"mtime":1611209193710,"results":"15","hashOfConfig":"13"},{"size":702,"mtime":1611209193711,"results":"16","hashOfConfig":"13"},{"size":1058,"mtime":1611209193701,"results":"17","hashOfConfig":"13"},{"size":489,"mtime":1611209193709,"results":"18","hashOfConfig":"13"},{"size":1170,"mtime":1611209193700,"results":"19","hashOfConfig":"13"},{"size":1764,"mtime":1611245404543,"results":"20","hashOfConfig":"13"},{"size":703,"mtime":1611245404548,"results":"21","hashOfConfig":"13"},{"size":520,"mtime":1611290058241,"results":"22","hashOfConfig":"13"},{"size":1346,"mtime":1611246054431,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"g0kvsn",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"26"},"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\index.js",[],["55","56"],"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\App.js",["57"],"import React, { useEffect } from 'react'\r\nimport { HashRouter,  Route } from 'react-router-dom';\r\nimport NavBar from './components/NavBar'\r\n\r\nimport Home from './pages/Home'\r\nimport Login from './pages/Login'\r\nimport NewArticle from './pages/NewArticle'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <NavBar />\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/post-article\" component={NewArticle} />\r\n      <Route path=\"/post-article/:articleid\" component={NewArticle} />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\reducers\\index.js",[],"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\reducers\\userReducer.js",["58"],"import { UserActionTypes } from '../actions/userActions'\r\n\r\n\r\nconst initialState = {\r\n    loginError: false,\r\n    isAuthenticated: false,\r\n    userInfo:null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload} = action;\r\n    switch(type) {\r\n        case UserActionTypes.LOGIN_SUCCESS:\r\n        case UserActionTypes.REGISETER_USER:\r\n            return { ...state, loginError: false, isAuthenticated: true, userInfo: { ...payload }}\r\n        case UserActionTypes.LOGIN_FAIL:\r\n            return { ...state, loginError: true }\r\n        case UserActionTypes.LOGOUT:\r\n            return { ...state, ...initialState }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\actions\\userActions.js",["59"],"import axios from 'axios'\r\n// import { history }\r\n\r\nexport const UserActionTypes = { \r\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n    LOGIN_FAIL: 'LOGIN_FAIL',\r\n    REGISETER_USER: 'REGISTER_USER',\r\n    LOGOUT: 'LOGOUT',\r\n}\r\n\r\nexport const registerUser = (newUser) => async dispatch => {\r\n    const res = await axios.post('localhost:5000/api/user', newUser);\r\n    dispatch({\r\n        type: UserActionTypes.REGISETER_USER,\r\n        payload: res.data\r\n    })\r\n}\r\n\r\nexport const loginUser = (credentials) => async dispatch => {\r\n    try{\r\n        const res = await axios.post('/api/login', credentials)\r\n        dispatch({\r\n            type: UserActionTypes.LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n    } catch (e) {\r\n        console.log(e)\r\n        dispatch({\r\n            type: UserActionTypes.LOGIN_FAIL,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n    try {\r\n        const res = await axios.post('/api/logout')\r\n        dispatch({ type: UserActionTypes.LOGOUT })\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\reducers\\blogReducer.js",["60"],"import { BlogActionTypes } from '../actions/blogActions'\r\n\r\n\r\nconst initialState = {\r\n    articles: []\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload} = action;\r\n    switch(type) {\r\n        case BlogActionTypes.FETCH_ARTICLES:\r\n            return { ...state, articles: payload }\r\n        case BlogActionTypes.POST_ARTICLE:\r\n            return {...state, articles: [payload, ...state.articles]}\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\actions\\blogActions.js",["61"],"import axios from 'axios'\r\n// import { history }\r\n\r\nexport const BlogActionTypes = {\r\n    FETCH_ARTICLES: 'FETCH_ARTICLES',\r\n    POST_ARTICLE: 'POST_ARTICLE',\r\n    DELETE_ARTICLE: 'DELETE_ARTICLE',\r\n    EDIT_ARTICLE: 'EDIT_ARTICLE',\r\n}\r\n\r\nexport const getArticles = () => async dispatch => {\r\n    const res = await axios.get('/api/blogpost')\r\n    console.log(res)\r\n    dispatch({\r\n        type: BlogActionTypes.FETCH_ARTICLES,\r\n        payload: res.data.blogposts\r\n    }) \r\n}\r\n\r\nexport const postArticle = (article) => async dispatch => {\r\n    const res = await axios.post('/api/blogpost', article)\r\n    dispatch({\r\n        type: BlogActionTypes.POST_ARTICLE,\r\n        payload: res.data\r\n    })\r\n}\r\n\r\nexport const deleteArticle = (articleId) => async dispatch => {\r\n    const res = await axios.delete(`/api/blogpost/${articleId}`)\r\n    dispatch({\r\n        type: BlogActionTypes.DELETE_ARTICLE,\r\n        payload: articleId\r\n    })\r\n}\r\n\r\nexport const editArticle = (editArticle) => async dispatch => {\r\n    const res = await axios.patch(`/api/blogpost/${editArticle.id}`)\r\n    dispatch({\r\n        type: BlogActionTypes.EDIT_ARTICLE,\r\n        payload: res.data\r\n    })\r\n}\r\n","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\NewArticle.js",["62"],"import React, { useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nconst ArticleForm = ({existingArticle, onSubmit}) => {\r\n    const [article, setArticle] = useState(existingArticle)\r\n\r\n    return(\r\n        <form onSubmit={() => onSubmit(article)}>\r\n            <label htmlFor=\"article-title\">Title</label><br />\r\n            <input id=\"article-title\" value={existingArticle.title} onChange={e=>setArticle({...existingArticle, title: e.target.value })}></input><br />\r\n            <label htmlFor=\"article-content\">Content</label><br/>\r\n            <textarea id=\"article-content\" value={existingArticle.content} onChange={e=>setArticle({...existingArticle, content:e.target.value})} /><br />\r\n        </form>\r\n    )\r\n}\r\n\r\nArticleForm.defaultProps = {\r\n    existingArticle: {\r\n        title:'',\r\n        content:''\r\n    }\r\n}\r\n\r\nconst ArticleWrapper = ({ match, history }) => {\r\n\r\n    const [fetchedArticle, setFetchedArticle] = useState({ title:'', content:''})\r\n    \r\n    useEffect(() => {\r\n        const { params } = match\r\n\r\n        async function fetchArticle(articleId) {\r\n            const res = await axios.get(`/api/blogposts/${articleId}`)\r\n            setFetchedArticle(res.data);\r\n        }\r\n        if(Object.keys(params).includes('articleid')){\r\n            fetchArticle(params.articleid)\r\n        }\r\n    })\r\n\r\n    const submitHandler = (article) => {\r\n        if(article.hasOwnProperty('id')) {\r\n            console.log(\"patch article \")\r\n        }\r\n        else {\r\n            console.log(\"creat User\")\r\n        }\r\n        // history.push('/')\r\n    }\r\n\r\n    return(\r\n        <ArticleForm existingArticle={fetchedArticle} onSubmit={submitHandler} />\r\n    )\r\n}\r\n\r\n\r\nexport default ArticleWrapper","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\Login.js",["63"],"import React, { useEffect, useState} from 'react'\r\n\r\nconst Login = () => {\r\n    const [credentials, setCredentials] = useState({email:'', password:''})\r\n\r\n    return(\r\n        <div className=\"login\">\r\n            <label htmlFor=\"login-email\">email</label>\r\n            <input  name=\"gender\" id=\"login-email\" value={credentials.email} onChange={e=>setCredentials({...credentials, email: e.target.value })}></input><br />\r\n            <label htmlFor=\"login-password\">password</label>\r\n            <input type=\"password\" id=\"login-password\" value={credentials.password} onChange={e=>setCredentials({...credentials, password:e.target.value})}></input><br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\components\\NavBar.js",[],"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\Home.js",["64"],"import React, { useEffect } from 'react'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux';\r\nimport { getArticles } from '../actions/blogActions'\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ \r\n    getArticles\r\n  },  dispatch)\r\n\r\nconst mapStateToProps = ({ blog }) => {\r\n    return {\r\n        blog\r\n    }\r\n}\r\n\r\nconst Home = ({ getArticles, blog }) => {\r\n\r\n    useEffect(() => {\r\n        getArticles()\r\n    },[])\r\n\r\n    if(blog.articles.length === 0) {\r\n        return <h1> No Blog posts. Yet</h1>\r\n    }\r\n    \r\n    if(blog.articles.length > 0) {\r\n        return (\r\n        <div className=\"blog-posts\">\r\n                {blog.articles.map(article => {\r\n                    return (\r\n                        <div className=\"article\">\r\n                            <h3 className=\"article-title\">{article.title}</h3>\r\n                            <span> created: {article.createdAt}</span>\r\n                            <br />\r\n                            <span>author: test</span>\r\n                            <p className=\"article-content\">{article.content}</p>\r\n                        </div>\r\n                    )\r\n                })\r\n                }\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return <h1>What's going on?</h1>\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"73","severity":1,"message":"74","line":10,"column":1,"nodeType":"75","endLine":23,"endColumn":2},{"ruleId":"69","severity":1,"message":"76","line":36,"column":15,"nodeType":"71","messageId":"72","endLine":36,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":8,"column":1,"nodeType":"75","endLine":18,"endColumn":2},{"ruleId":"69","severity":1,"message":"76","line":29,"column":11,"nodeType":"71","messageId":"72","endLine":29,"endColumn":14},{"ruleId":"69","severity":1,"message":"77","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":17},{"ruleId":"69","severity":1,"message":"70","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":20,"column":7,"nodeType":"80","endLine":20,"endColumn":9,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'res' is assigned a value but never used.","'connect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getArticles'. Either include it or remove the dependency array. If 'getArticles' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [getArticles]",{"range":"87","text":"88"},[458,460],"[getArticles]"]