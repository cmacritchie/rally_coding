[{"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\index.js":"1","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\App.js":"2","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\reducers\\index.js":"3","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\reducers\\userReducer.js":"4","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\actions\\userActions.js":"5","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\reducers\\blogReducer.js":"6","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\actions\\blogActions.js":"7","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\NewArticle.js":"8","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\Login.js":"9","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\components\\NavBar.js":"10","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\Home.js":"11","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\components\\Credentials.js":"12","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\Signup.js":"13","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\HOC\\protectedRoute.js":"14","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\UserSettings.js":"15"},{"size":672,"mtime":1611471410871,"results":"16","hashOfConfig":"17"},{"size":1256,"mtime":1611544757570,"results":"18","hashOfConfig":"17"},{"size":206,"mtime":1611209193710,"results":"19","hashOfConfig":"17"},{"size":856,"mtime":1611544757585,"results":"20","hashOfConfig":"17"},{"size":1784,"mtime":1611544757574,"results":"21","hashOfConfig":"17"},{"size":937,"mtime":1611544757583,"results":"22","hashOfConfig":"17"},{"size":1953,"mtime":1611675902810,"results":"23","hashOfConfig":"17"},{"size":2663,"mtime":1611675655587,"results":"24","hashOfConfig":"17"},{"size":926,"mtime":1611544757579,"results":"25","hashOfConfig":"17"},{"size":1168,"mtime":1611544757577,"results":"26","hashOfConfig":"17"},{"size":2549,"mtime":1611641749037,"results":"27","hashOfConfig":"17"},{"size":1324,"mtime":1611544757575,"results":"28","hashOfConfig":"17"},{"size":949,"mtime":1611544757581,"results":"29","hashOfConfig":"17"},{"size":603,"mtime":1611544757572,"results":"30","hashOfConfig":"17"},{"size":368,"mtime":1611544757582,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"g0kvsn",{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"34"},"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\index.js",[],["72","73"],"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\App.js",["74","75","76"],"import React, { useEffect } from 'react'\r\n\r\nimport { HashRouter, Router,  Route } from 'react-router-dom';\r\nimport Cookie from 'js-cookie'\r\nimport { useDispatch } from \"react-redux\";\r\nimport NavBar from './components/NavBar'\r\n\r\nimport Home from './pages/Home'\r\nimport Login from './pages/Login'\r\nimport Signup from './pages/Signup'\r\nimport NewArticle from './pages/NewArticle'\r\nimport UserSettings from './pages/UserSettings'\r\nimport protectedRoute from './HOC/protectedRoute'\r\n\r\nimport { getMe } from './actions/userActions'\r\nimport { createBrowserHistory } from 'history';\r\nexport const history = createBrowserHistory()\r\n// export let history = createBrowserHistory();\r\n\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getMe())\r\n  })\r\n\r\n  return (\r\n    <HashRouter >\r\n      <NavBar />\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/login\" component={Login} />\r\n      <Route path=\"/sign-up\" component={Signup} />\r\n      <Route exact path=\"/post-article\" component={NewArticle} />\r\n      <Route exact path=\"/post-article/:articleid\" component={NewArticle} />\r\n      <Route exact path=\"/user-settings\" component={UserSettings} />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\reducers\\index.js",[],"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\reducers\\userReducer.js",["77"],"import { UserActionTypes } from '../actions/userActions'\r\n\r\n\r\nconst initialState = {\r\n    loginError: false,\r\n    isAuthenticated: false,\r\n    userInfo:null,\r\n    failAcknowledge:true\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload} = action;\r\n    switch(type) {\r\n        case UserActionTypes.LOGIN_SUCCESS:\r\n        case UserActionTypes.REGISETER_USER:\r\n            return { ...state, loginError: false, isAuthenticated: true, userInfo: { ...payload }}\r\n        case UserActionTypes.LOGIN_FAIL:\r\n            return { ...state, loginError: true, failAcknowledge:false }\r\n        case UserActionTypes.LOGOUT:\r\n            return { ...state, ...initialState }\r\n        case UserActionTypes.FAIL_ACKNOWLEDGE:\r\n            return { ...state, failAcknowledge: true }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\actions\\userActions.js",["78"],"import axios from 'axios'\r\n\r\n\r\nexport const UserActionTypes = { \r\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n    LOGIN_FAIL: 'LOGIN_FAIL',\r\n    REGISETER_USER: 'REGISTER_USER',\r\n    LOGOUT: 'LOGOUT',\r\n    FAIL_ACKNOWLEDGE: 'FAIL_ACKNOWLEDGE'\r\n}\r\n\r\nexport const getMe = () => async dispatch => {\r\n\r\n    try{\r\n        const res = await axios.get('/api/me',);\r\n        console.log(\"good\", res)\r\n        dispatch({\r\n            type: UserActionTypes.LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n    \r\n    } catch (e) {\r\n        console.log('bad', e)\r\n    }\r\n}\r\n\r\nexport const registerUser = (newUser, history) => async dispatch => {\r\n    console.log(\"inside action \",newUser)\r\n    try{\r\n        const res = await axios.post('/api/user', newUser);\r\n        console.log(res);\r\n        dispatch({\r\n            type: UserActionTypes.REGISETER_USER,\r\n            payload: res.data\r\n        })\r\n        history.push('/')\r\n    } catch (e) {\r\n        dispatch({ type: UserActionTypes.LOGIN_FAIL })\r\n    }\r\n}\r\n\r\nexport const loginUser = (credentials, history) => async dispatch => {\r\n    try{\r\n        const res = await axios.post('/api/login', credentials)\r\n        dispatch({\r\n            type: UserActionTypes.LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        history.push('/')\r\n    } catch (e) {\r\n        console.log(e)\r\n        dispatch({ type: UserActionTypes.LOGIN_FAIL })\r\n    }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n    console.log('logout');\r\n    try {\r\n        const res = await axios.post('/api/logout')\r\n        dispatch({ type: UserActionTypes.LOGOUT })\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const failAcknowledge = () => async dispatch => {\r\n    dispatch({\r\n        type: UserActionTypes.FAIL_ACKNOWLEDGE\r\n    })\r\n}","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\reducers\\blogReducer.js",["79"],"import { BlogActionTypes } from '../actions/blogActions'\r\n\r\n\r\nconst initialState = {\r\n    articles: [],\r\n    loaded:false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload} = action;\r\n    switch(type) {\r\n        case BlogActionTypes.FETCH_ARTICLES:\r\n            return { ...state, articles: payload, loaded:true }\r\n        case BlogActionTypes.POST_ARTICLE:\r\n            return {...state, articles: [payload, ...state.articles]}\r\n        case BlogActionTypes.DELETE_ARTICLE:\r\n            return { ...state, articles: state.articles.filter(article => article.id !== payload)}\r\n        case BlogActionTypes.EDIT_ARTICLE:\r\n            return{ ...state, articles: state.articles.map(article => {\r\n                if(article.id === payload.id) {\r\n                    return payload\r\n                }\r\n                return article\r\n            })}\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\actions\\blogActions.js",[],"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\NewArticle.js",["80","81"],"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\Login.js",["82"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Credentials from '../components/Credentials'\r\nimport { loginUser, failAcknowledge } from '../actions/userActions'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const user = useSelector((state) => state.user)\r\n    \r\n\r\n    useEffect(() => {\r\n        return () => { \r\n            if(user.loginError) {\r\n                dispatch(failAcknowledge()) \r\n            } \r\n        }\r\n    },[])\r\n\r\n    const submit = (info) => {\r\n        dispatch(loginUser(info, history))\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <h1>Login</h1>\r\n        <Credentials onSubmit={submit} />\r\n        {(user.loginError && !user.failAcknowledge) &&\r\n            <h1>Failed to Sign up </h1>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\components\\NavBar.js",["83"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst NavBar = () => {\r\n    const user = useSelector((state) => state.user)\r\n    const dispatch = useDispatch()\r\n\r\n    const test =() => {\r\n        console.log('in test')\r\n        dispatch(logout())\r\n    }\r\n    return(\r\n    <div className=\"nav-bar-wrapper\">\r\n        <ul className=\"nav-bar\">\r\n            <li><NavLink to='/'>Home</NavLink></li>\r\n            {!user.isAuthenticated &&\r\n            <>\r\n                <li><NavLink to='/login'>Login</NavLink></li>\r\n                <li><NavLink to='/sign-up'>Signup</NavLink></li>\r\n            </>\r\n            }\r\n            {user.isAuthenticated &&\r\n            <>\r\n                <li><NavLink to='/post-article'>New Article</NavLink></li>\r\n                <li><NavLink to='/user-settings'>Edit User</NavLink></li>\r\n                <li><a onClick={()=> test()}>Logout</a></li>\r\n                <li><span>Welcome {user.userInfo.name}</span></li>\r\n            </>\r\n            }\r\n        </ul>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\Home.js",["84","85"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getArticles, deleteArticle} from '../actions/blogActions'\r\nimport { NavLink } from 'react-router-dom';\r\nimport moment from 'moment'\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch()\r\n    const {user, blog} = useSelector(({blog, user}) => { \r\n        return { blog, user }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(!blog.loaded) {\r\n            dispatch(getArticles())\r\n        }\r\n    },[blog.loaded])\r\n\r\n    if(blog.articles.length === 0) {\r\n        return <h1> No Blog posts. Yet</h1>\r\n    }\r\n    \r\n    if(blog.articles.length > 0) {\r\n        return (\r\n        <div className=\"blog-posts\">\r\n                {blog.articles.map(article => {\r\n                    return (\r\n                        <div key={`article_${article.id}`} className=\"article\">\r\n                            <h3 className=\"article-title\">{article.title}</h3>\r\n                            <div className=\"article-info\">\r\n                                <div>\r\n                                    <span>author: {article.User.name}</span>\r\n                                    &nbsp;\r\n                                    &nbsp;\r\n                                    <span> created: {moment(article.createdAt).format('YYYY-MM-DD')}</span>\r\n                                </div>\r\n                                {(user.isAuthenticated && (article.UserId === user.userInfo.id)) &&\r\n                                <div>\r\n                                    <button><NavLink to={`/post-article/${article.id}`}>Edit</NavLink></button>\r\n                                    <button onClick={()=>dispatch(deleteArticle(article.id))}>DELETE</button>\r\n                                </div>\r\n                                }\r\n                            </div>\r\n                            <br />\r\n                            {console.log(article.id)}\r\n                            {article.imageUrl &&\r\n                                <img src={`data:image/jpg;base64, ${Buffer.from(article.imageUrl.data).toString('base64')}`} />\r\n                            }\r\n                            {/* The below works too: */}\r\n                            {/* <img src={`/api/blogpost/1/avatar`} /> */}\r\n                            <p className=\"article-content\">{article.content}</p>\r\n                        </div>\r\n                    )\r\n                })\r\n                }\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return <h1>What's going on?</h1>\r\n}\r\n\r\nexport default Home","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\components\\Credentials.js",[],"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\Signup.js",["86"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Credentials from '../components/Credentials'\r\nimport { registerUser, failAcknowledge } from '../actions/userActions'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Signup = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const user = useSelector((state) => state.user)\r\n    \r\n\r\n    useEffect(() => {\r\n        return () => { \r\n            if(user.loginError) {\r\n                dispatch(failAcknowledge()) \r\n            }\r\n        }\r\n    },[])\r\n\r\n    const submit = (info) => {\r\n        dispatch(registerUser(info, history))\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <h1> Sign Up</h1>\r\n        <Credentials onSubmit={submit} email={true} />\r\n        {(user.loginError && !user.failAcknowledge) &&\r\n            <h1>Failed to Login User</h1>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup","C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\HOC\\protectedRoute.js",[],"C:\\Users\\craig.macritchie\\Desktop\\Rally_Coding_Redux\\Node\\Postgresql\\client\\src\\pages\\UserSettings.js",["87","88"],"import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst UserSettings = () => {\r\n    const user = useSelector((state) => state.user)\r\n    const dispatch = useDispatch()\r\n\r\n    return(\r\n        <div>\r\n            <h3>User settings</h3>\r\n            <p>Under Construction</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserSettings\r\n\r\n",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":3,"column":22,"nodeType":"95","messageId":"96","endLine":3,"endColumn":28},{"ruleId":"93","severity":1,"message":"97","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":14},{"ruleId":"93","severity":1,"message":"98","line":13,"column":8,"nodeType":"95","messageId":"96","endLine":13,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":11,"column":1,"nodeType":"101","endLine":26,"endColumn":2},{"ruleId":"93","severity":1,"message":"102","line":59,"column":15,"nodeType":"95","messageId":"96","endLine":59,"endColumn":18},{"ruleId":"99","severity":1,"message":"100","line":9,"column":1,"nodeType":"101","endLine":28,"endColumn":2},{"ruleId":"93","severity":1,"message":"103","line":47,"column":11,"nodeType":"95","messageId":"96","endLine":47,"endColumn":15},{"ruleId":"104","severity":1,"message":"105","line":60,"column":7,"nodeType":"106","endLine":60,"endColumn":9,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":19,"column":7,"nodeType":"106","endLine":19,"endColumn":9,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":28,"column":21,"nodeType":"112","endLine":28,"endColumn":46},{"ruleId":"104","severity":1,"message":"113","line":17,"column":7,"nodeType":"106","endLine":17,"endColumn":20,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":47,"column":33,"nodeType":"112","endLine":47,"endColumn":128},{"ruleId":"104","severity":1,"message":"108","line":19,"column":7,"nodeType":"106","endLine":19,"endColumn":9,"suggestions":"117"},{"ruleId":"93","severity":1,"message":"103","line":5,"column":11,"nodeType":"95","messageId":"96","endLine":5,"endColumn":15},{"ruleId":"93","severity":1,"message":"118","line":6,"column":11,"nodeType":"95","messageId":"96","endLine":6,"endColumn":19},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Cookie' is defined but never used.","'protectedRoute' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'res' is assigned a value but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match'. Either include it or remove the dependency array.","ArrayExpression",["121"],"React Hook useEffect has missing dependencies: 'dispatch' and 'user.loginError'. Either include them or remove the dependency array.",["122"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["123"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["124"],"'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"127","fix":"131"},"Update the dependencies array to be: [match]",{"range":"132","text":"133"},"Update the dependencies array to be: [dispatch, user.loginError]",{"range":"134","text":"135"},"Update the dependencies array to be: [blog.loaded, dispatch]",{"range":"136","text":"137"},{"range":"138","text":"135"},[2075,2077],"[match]",[587,589],"[dispatch, user.loginError]",[505,518],"[blog.loaded, dispatch]",[590,592]]